script

// URL till API:et
const apiUrl = "http://127.0.0.1:7071/api/FetchExchangeRates"; // För localhost backend



// Funktion för att hämta växelkurser
async function fetchExchangeRates() {
    console.log("Start fetching exchange rates..."); // Debug-logg

    try {
        console.log("Sending request to API:", apiUrl); // Debug-logg
        const response = await fetch(apiUrl, {
            method: "GET",
            headers: {
                "Content-Type": "application/json"
            },
        });

        console.log("Response received:", response); // Debug-logg

        if (!response.ok) {
            console.error("API response is not OK. Status:", response.status); // Debug-logg
            throw new Error(`HTTP error! Status: ${response.status}`);
        }

        const data = await response.json();
        console.log("Data fetched successfully:", data); // Debug-logg
        displayExchangeRates(data.rates); // Skicka 'rates' till display-funktionen
    } catch (error) {
        console.error("Error fetching exchange rates:", error); // Debug-logg
    }

    console.log("Finished fetching exchange rates."); // Debug-logg
}

// Funktion för att visa växelkurser i HTML
function displayExchangeRates(rates) {
    console.log("Displaying exchange rates:", rates); // Debug-logg

    const container = document.getElementById("exchangeRatesContainer");
    const list = document.createElement("ul");

    for (const [currency, rate] of Object.entries(rates)) {
        console.log(`Adding rate to list: ${currency} - ${rate}`); // Debug-logg
        const listItem = document.createElement("li");
        listItem.textContent = `${currency}: ${rate.toFixed(2)}`;
        list.appendChild(listItem);
    }

    container.innerHTML = ""; // Rensa eventuell tidigare data
    container.appendChild(list);

    console.log("Exchange rates displayed successfully."); // Debug-logg
}

// Anropa funktionen när sidan laddas
window.onload = () => {
    console.log("Page loaded. Fetching exchange rates..."); // Debug-logg
    fetchExchangeRates();
};



fetchExchangeRates

"using System;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json.Linq;

public static class FetchExchangeRates
{
    private static readonly HttpClient client = new HttpClient();

    [FunctionName("FetchExchangeRates")]
    public static async Task<HttpResponseMessage> Run(
        [HttpTrigger(AuthorizationLevel.Function, "get", "options", Route = null)] HttpRequestMessage req,
        ILogger log)
    {
        log.LogInformation("Fetching exchange rates...");

        // Hämta CORS-konfiguration från miljövariabel
        string corsOrigins = Environment.GetEnvironmentVariable("CORS_ALLOWED_ORIGINS");
        log.LogInformation("CORS allowed origins: " + corsOrigins);

        // Hantera OPTIONS-förfrågningar
        if (req.Method == HttpMethod.Options)
        {
            var optionsResponse = new HttpResponseMessage(HttpStatusCode.OK);
            
            // Tillåter flera origin-domäner
            optionsResponse.Headers.Add("Access-Control-Allow-Origin", corsOrigins); // Tillåter angivna domäner
            optionsResponse.Headers.Add("Access-Control-Allow-Methods", "GET, OPTIONS"); // Tillåt metoder
            optionsResponse.Headers.Add("Access-Control-Allow-Headers", "Content-Type"); // Tillåt headers

            return optionsResponse;
        }

        // Hämta data från API
        string apiKey = Environment.GetEnvironmentVariable("OPENEXCHANGERATES_API_KEY");
        string url = $"https://openexchangerates.org/api/latest.json?app_id={apiKey}";

        var response = await client.GetStringAsync(url);
        var data = JObject.Parse(response);

        // Filtrera valutorna
        var popularCurrencies = new[] { "EUR", "GBP", "SEK", "USD", "AUD", "JPY", "CAD", "CHF", "NOK", "THB" };
        var filteredRates = new JObject();

        foreach (var currency in popularCurrencies)
        {
            if (data["rates"][currency] != null)
            {
                filteredRates[currency] = data["rates"][currency];
            }
        }

        var result = new JObject
        {
            ["base"] = data["base"],
            ["rates"] = filteredRates
        };

        // Returnera data med CORS-header
        var responseMessage = new HttpResponseMessage(HttpStatusCode.OK)
        {
            Content = new StringContent(result.ToString(), System.Text.Encoding.UTF8, "application/json")
        };

        // Lägg till CORS-headers för att tillåta förfrågningar från angivna origin-domäner
        responseMessage.Headers.Add("Access-Control-Allow-Origin", corsOrigins);
        responseMessage.Headers.Add("Access-Control-Allow-Methods", "GET, OPTIONS"); 
        responseMessage.Headers.Add("Access-Control-Allow-Headers", "Content-Type");

        return responseMessage;
    }
}

"

index filen 

"
<!DOCTYPE html>
<html lang="sv">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Valutaomvandlare</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <h1>Välkommen till Valutaomvandlaren!</h1>
    <p>Denna app hjälper dig att omvandla valutor med aktuella växelkurser.</p>

    <!-- Plats för att visa aktuella växelkurser -->
    <div id="exchangeRatesContainer">
        <h2>Aktuella växelkurser:</h2>
        <!-- Växelkurserna kommer att visas här -->
    </div>

    <!-- Formulär för valutaomvandling -->
    <form id="currencyForm">
        <label for="baseCurrency">Basvaluta:</label>
        <input type="text" id="baseCurrency" placeholder="Ex: USD" required>
        
        <label for="targetCurrency">Målvaluta:</label>
        <input type="text" id="targetCurrency" placeholder="Ex: SEK" required>
        
        <label for="amount">Belopp:</label>
        <input type="number" id="amount" placeholder="Ex: 100" required>
        
        <button type="submit">Konvertera</button>
    </form>

    <!-- Plats för att visa resultat -->
    <div id="result"></div>

    <script src="script.js"></script>
</body>
</html>



"